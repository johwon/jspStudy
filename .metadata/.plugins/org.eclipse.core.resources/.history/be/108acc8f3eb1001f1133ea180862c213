package co.kh.dev.bbs;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(name = "visitInsert", urlPatterns = { "/visitInsert" })
public class VisitInsert extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public VisitInsert() {
        super();
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doPost(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//1-1. 전송된 값을 utf-8로 셋팅하기
		request.setCharacterEncoding("UTF-8");
		//1-2. 정보 가져오기
		String writer = request.getParameter("writer");
		String memo = request.getParameter("memo");
		
		//2. 테이블에 저장한다(프로토콜:약속)
		Connection con = null;
		PreparedStatement pstmt = null;     //오라클에서 작업할 쿼리문 사용할게 하는 명령문
		String url = "jdbc:oracle:thin:@127.0.0.1:1521/xe";
		String VISIT_INSERT = "INSERT INTO VISIT VALUES(VISIT_SEQ.NEXTVAL, ?, ?, SYSDATE)";
        // 1. jdbc driver load 2. connection
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection(url, "webuser", "123456");
        } catch (ClassNotFoundException e) {
            System.out.println(e.toString());
        } catch (SQLException e) {
            System.out.println(e.toString());
        }
        
        try {
            pstmt = con.prepareStatement(LESSON_INSERT);
            pstmt.setString(1, lvo.getAbbre());
            pstmt.setString(2, lvo.getName()); 

            int count = pstmt.executeUpdate();
            successFlag = (count != 0)?(true):(false); 
        } catch (SQLException e) {
            System.out.println(e.toString());
        } finally {
            DBUtility.dbClose(con, pstmt);
        }
        
        
		
	}

}
